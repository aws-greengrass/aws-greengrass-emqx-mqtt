--- emqx.cmd	(revision a168e02e3b2afc4cb06639362f3394444fde2170)
+++ emqx.cmd	(date 1682120155659)
@@ -40,16 +40,36 @@
     @set rel_root_dir=.
 )
 
+:: [greengrass patch start]
+:: navigate to release directory before any erlang process is called
+:: this is because the properties in greengrass-generated erl.ini file are relative to the rel dir.
+:: normally erl.ini would have absolute dirs.
+@chdir /d "%rel_root_dir%"
+:: [greengrass patch end]
+
 @set "erts_dir=%rel_root_dir%\erts-%erts_vsn%"
 @set "rootdir=%rel_root_dir%"
 @set "rel_dir=%rel_root_dir%\releases\%rel_vsn%"
 @set "RUNNER_ROOT_DIR=%rel_root_dir%"
-:: hard code etc dir
-@set "EMQX_ETC_DIR=%rel_root_dir%\etc"
-@set "etc_dir=%rel_root_dir%\etc"
+:: [greengrass patch start]
+:: etc dir from env var provided by emqx component recipe
+@if defined EMQX_NODE__ETC_DIR (
+  set "etc_dir=%EMQX_NODE__ETC_DIR%"
+) else (
+  @set "etc_dir=%rel_root_dir%\etc"
+)
+@set "EMQX_ETC_DIR=%etc_dir%"
+:: [greengrass patch end]
+
 @set "lib_dir=%rel_root_dir%\lib"
 @set "emqx_conf=%etc_dir%\emqx.conf"
 
+:: [greengrass patch start]
+:: Ensure erlang has the right dlls
+@set greengrass_auth_plugin_bin_dir=%rel_root_dir%\plugins\gg-1.0.0\gg-1.0.0\priv
+@set PATH=%greengrass_auth_plugin_bin_dir%;%PATH%
+:: [greengrass patch end]
+
 @set "boot_file_name=%rel_dir%\start"
 @set "service_name=%rel_name%_%rel_vsn%"
 @set "bindir=%erts_dir%\bin"
@@ -67,27 +87,41 @@
 @set EMQX_NODE__DB_BACKEND=mnesia
 @set EMQX_NODE__DB_ROLE=core
 
-:: Write the erl.ini file to set up paths relative to this script
-@call :write_ini
+:: [greengrass patch start]
+:: erl.ini is written when greengrass builds emqx;
+:: It cannot be written in this script because there
+:: are no write permissions in greengrass artifact dirs.
+:: @call :write_ini
+:: [greengrass patch end]
 
-:: If a start.boot file is not present, copy one from the named .boot file
-@if not exist "%rel_dir%\start.boot" (
-  copy "%rel_dir%\%rel_name%.boot" "%rel_dir%\start.boot" >nul
-)
+:: [greengrass patch start]
+:: There are no write permissions in greengrass artifact dirs,
+:: so this copy step is not necessary.
+:: @if not exist "%rel_dir%\start.boot" (
+::   copy "%rel_dir%\%rel_name%.boot" "%rel_dir%\start.boot" >nul
+:: )
+:: [greengrass patch end]
 
 @set conf_path="%etc_dir%\emqx.conf"
 
-@for /f "usebackq tokens=1,2 delims==" %%a in (`"%escript% %nodetool% hocon -s %schema_mod% -c %conf_path% multi_get node.name node.cookie node.data_dir"`) do @(
+:: [greengrass patch start]
+:: remove data dir looking from config file,
+:: use env vars for data dir since that's how
+:: greengrass exposes user configuration
+@for /f "usebackq tokens=1,2 delims==" %%a in (`"%escript% %nodetool% hocon -s %schema_mod% -c %conf_path% multi_get node.name node.cookie"`) do @(
   if "%%a"=="node.name" set node_name=%%b
   if "%%a"=="node.cookie" set node_cookie=%%b
-  if "%%a"=="node.data_dir" set data_dir=%%b
 )
+:: [greengrass patch end]
 
-@set data_dir=%data_dir:"=%
-:: remove trailing /
-@if %data_dir:~-1%==/ SET data_dir=%data_dir:~0,-1%
-:: remove trailing \
-@if %data_dir:~-1%==\ SET data_dir=%data_dir:~0,-1%
+:: [greengrass patch start]
+:: Use data dir from emqx component recipe, if provided
+@if defined EMQX_NODE__DATA_DIR (
+  set data_dir=%EMQX_NODE__DATA_DIR%
+) else (
+  @set data_dir=%rel_root_dir%\data
+)
+:: [greengrass patch end]
 
 @set abs_data_dir=%rel_root_dir%\%data_dir%
 @if exist %abs_data_dir% (
@@ -186,7 +221,11 @@
 @echo off
 cd /d "%rel_root_dir%"
 @echo on
-@start "%rel_name%" %werl%  -mode embedded -boot "%boot_file_name%" %args%
+:: [greengrass patch start]
+:: Run werl directly, not in a new process via start
+@title "%rel_name%"
+@%werl% -mode embedded -boot "%boot_file_name%" %args% || exit /b
+:: [greengrass patch end]
 @goto :eof
 
 :: Stop the Windows service
@@ -194,6 +233,19 @@
 :: window service?
 :: @%erlsrv% stop %service_name%
 @%escript% %nodetool% %node_type% %node_name% -setcookie %node_cookie% stop
+:: [greengrass patch start]
+:: wait to kill empd until ping fails,
+:: to ensure stop command completes when emqx is fully stopped
+@IF %ERRORLEVEL% NEQ 0 (
+    @exit /b
+)
+:TryPinging
+@%escript% %nodetool% ping %node_type% "%node_name%" -setcookie "%node_cookie%"
+@IF %ERRORLEVEL% EQU 0 (
+    @goto TryPinging
+)
+@%epmd% -kill
+:: [greengrass patch end]
 @goto :eof
 
 :: Start a console
@@ -206,7 +258,7 @@
 @echo off
 cd /d %rel_root_dir%
 @echo on
-%erl_exe% -mode embedded -boot "%boot_file_name%" %args%
+%erl_exe% -noshell -mode embedded -boot "%boot_file_name%" %args% || exit /b
 @goto :eof
 
 :: Ping the running node
